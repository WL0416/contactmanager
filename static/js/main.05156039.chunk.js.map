{"version":3,"sources":["context.jsx","components/contacts/Contact.jsx","components/contacts/Contacts.jsx","components/layout/Header.jsx","components/layout/TextinputGroup.jsx","components/contacts/AddContact.jsx","components/contacts/EditContact.jsx","components/pages/About.jsx","components/pages/NotFound.jsx","components/test/Test.jsx","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","dispatch","_this","setState","axios","get","res","this","data","react_default","a","createElement","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","_callee","regenerator_default","wrap","_context","prev","next","delete","t0","stop","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","key","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","_this$state","newContact","preventDefault","abrupt","post","sent","history","push","defineProperty","target","_this$state2","TextinputGroup","EditContact","updContact","match","params","put","About","NotFound","Test","title","body","fetch","then","response","json","App","context","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0SAGMA,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OACvB,SAAAC,GAAO,OAAIA,EAAQC,KAAOP,EAAOQ,YAGvC,IAAK,cACH,OAAON,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOQ,SAAVC,OAAAP,OAAAQ,EAAA,EAAAR,CAAsBH,EAAMK,aAExC,IAAK,iBACH,OAAOF,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASO,IAAI,SAAAL,GAAO,OAClCA,EAAQC,KAAOP,EAAOQ,QAAQD,GACzBD,EAAUN,EAAOQ,QAClBF,MAGV,QACE,OAAOP,IA2BEa,6MAtBbb,MAAQ,CACNK,SAAU,GACVS,SAAU,SAAAb,GACRc,EAAKC,SAAS,SAAAhB,GAAK,OAAID,EAAQC,EAAOC,wNAKtBgB,IAAMC,IAAI,qDAAtBC,SAENC,KAAKJ,SAAS,CAAEX,SAAUc,EAAIE,0IAI9B,OACEC,EAAAC,EAAAC,cAAC5B,EAAQiB,SAAT,CAAkBY,MAAOL,KAAKpB,OAC3BoB,KAAKM,MAAMC,iBAjBGC,aAwBVC,EAAWjC,EAAQiC,SC0BjBC,6MA5Eb9B,MAAQ,CACN+B,iBAAiB,KAGnBC,YAAc,SAAAC,GACZlB,EAAKC,SAAS,CAAEe,iBAAkBhB,EAAKf,MAAM+B,qBAG/CG,oDAAgB,SAAAC,EAAO3B,EAAIM,GAAX,OAAAsB,EAAAb,EAAAc,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAENvB,IAAMwB,OAAN,8CAAA/B,OAA2DF,IAFrD,OAGZM,EAAS,CAAEZ,KAAM,iBAAkBO,QAASD,IAHhC8B,EAAAE,KAAA,eAAAF,EAAAC,KAAA,EAAAD,EAAAI,GAAAJ,EAAA,SAKZxB,EAAS,CAAEZ,KAAM,iBAAkBO,QAASD,IALhC,wBAAA8B,EAAAK,SAAAR,EAAA,iJASP,IAAAS,EAAAxB,KAAAyB,EAC4BzB,KAAKM,MAAMnB,QAAtCC,EADDqC,EACCrC,GAAIsC,EADLD,EACKC,KAAMC,EADXF,EACWE,MAAOC,EADlBH,EACkBG,MACjBjB,EAAoBX,KAAKpB,MAAzB+B,gBACR,OACET,EAAAC,EAAAC,cAACK,EAAD,KACG,SAAAJ,GAAS,IACAX,EAAaW,EAAbX,SACR,OACEQ,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,uBACb3B,EAAAC,EAAAC,cAAA,UACGsB,EACAf,EACCT,EAAAC,EAAAC,cAAA,KACE0B,QAASN,EAAKZ,YACdiB,UAAU,iBACVE,MAAO,CAAEC,OAAQ,aAGnB9B,EAAAC,EAAAC,cAAA,KACE0B,QAASN,EAAKZ,YACdiB,UAAU,mBACVE,MAAO,CAAEC,OAAQ,aAGrB9B,EAAAC,EAAAC,cAAA,KACEyB,UAAU,eACVE,MAAO,CAAEC,OAAQ,UAAWC,MAAO,QAASC,MAAO,OACnDJ,QAASN,EAAKV,cAAcqB,KAAKX,EAAMpC,EAAIM,KAE7CQ,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAE,gBAAA/C,OAAkBF,IACxBc,EAAAC,EAAAC,cAAA,KACEyB,UAAU,oBACVE,MAAO,CACLC,OAAQ,UACRC,MAAO,QACPC,MAAO,QACPI,YAAa,YAKpB3B,EACCT,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,cACZ3B,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,mBAAmBF,GACjCzB,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,mBAAmBD,IAEjC,eAhEIpB,aCoBP+B,mLApBX,OACErC,EAAAC,EAAAC,cAACK,EAAD,KACG,SAAAJ,GAAS,IACApB,EAAaoB,EAAbpB,SACR,OACEiB,EAAAC,EAAAC,cAACF,EAAAC,EAAMqC,SAAP,KACEtC,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,kBACZ3B,EAAAC,EAAAC,cAAA,QAAMyB,UAAU,eAAhB,YADF,SAGC5C,EAASO,IAAI,SAAAL,GAAO,OACnBe,EAAAC,EAAAC,cAACqC,EAAD,CAASC,IAAKvD,EAAQC,GAAID,QAASA,gBAZ5BqB,aCAjBmC,EAAS,SAAArC,GAAS,IACdsC,EAAatC,EAAbsC,SACR,OACE1C,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,2DACb3B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,aACb3B,EAAAC,EAAAC,cAAA,KAAGyC,KAAK,IAAIhB,UAAU,gBACnBe,GAEH1C,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,sBACZ3B,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,YACZ3B,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAG,IAAIR,UAAU,YACrB3B,EAAAC,EAAAC,cAAA,KAAGyB,UAAU,gBADf,UAIF3B,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,YACZ3B,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAG,eAAeR,UAAU,YAChC3B,EAAAC,EAAAC,cAAA,KAAGyB,UAAU,gBADf,SAIF3B,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,YACZ3B,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAMC,GAAG,SAASR,UAAU,YAC1B3B,EAAAC,EAAAC,cAAA,KAAGyB,UAAU,oBADf,gBAWdc,EAAOG,aAAe,CACpBF,SAAU,UAOGD,iCCxCTI,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAvB,EAMIsB,EANJtB,KACArB,EAKI2C,EALJ3C,MACA6C,EAIIF,EAJJE,YACApE,EAGIkE,EAHJlE,KACAqE,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACElD,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,cACb3B,EAAAC,EAAAC,cAAA,SAAOiD,QAAS3B,GAAOuB,GACvB/C,EAAAC,EAAAC,cAAA,SACEtB,KAAMA,EACN4C,KAAMA,EACNG,UAAWyB,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACb7C,MAAOA,EACP8C,SAAUA,IAEXC,GAASlD,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,oBAAoBuB,KAenDL,EAAeD,aAAe,CAC5BhE,KAAM,QAGOiE,QCiFAS,6MAvHb5E,MAAQ,CACN8C,KAAM,GACNC,MAAO,GACPC,MAAO,GACP6B,OAAQ,MAGVC,+CAAW,SAAA3C,EAAOrB,EAAUmB,GAAjB,IAAA8C,EAAAjC,EAAAC,EAAAC,EAAAgC,EAAA7D,EAAA,OAAAiB,EAAAb,EAAAc,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTP,EAAEgD,iBADOF,EAGsBhE,EAAKf,MAA5B8C,EAHCiC,EAGDjC,KAAMC,EAHLgC,EAGKhC,MAAOC,EAHZ+B,EAGY/B,MAGR,KAATF,EANK,CAAAR,EAAAE,KAAA,eAOPzB,EAAKC,SAAS,CACZ6D,OAAQ,CACN/B,KAAM,sBATHR,EAAA4C,OAAA,oBAeK,KAAVnC,EAfK,CAAAT,EAAAE,KAAA,eAgBPzB,EAAKC,SAAS,CACZ6D,OAAQ,CACN9B,MAAO,uBAlBJT,EAAA4C,OAAA,oBAwBK,KAAVlC,EAxBK,CAAAV,EAAAE,KAAA,gBAyBPzB,EAAKC,SAAS,CACZ6D,OAAQ,CACN7B,MAAO,uBA3BJV,EAAA4C,OAAA,yBAiCHF,EAAa,CAEjBlC,OACAC,QACAC,SArCOV,EAAAE,KAAA,GAwCSvB,IAAMkE,KACtB,6CACAH,GA1CO,QAwCH7D,EAxCGmB,EAAA8C,KA6CTtE,EAAS,CAAEZ,KAAM,cAAeO,QAASU,EAAIE,OAG7CN,EAAKC,SAAS,CACZ8B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPwB,MAAO,KAGTzD,EAAKW,MAAM2D,QAAQC,KAAK,KAvDf,yBAAAhD,EAAAK,SAAAR,gEA0DXoC,SAAW,SAAAtC,GAAC,OAAIlB,EAAKC,SAALb,OAAAoF,EAAA,EAAApF,CAAA,GAAiB8B,EAAEuD,OAAO1C,KAAOb,EAAEuD,OAAO/D,iFAEjD,IAAAmB,EAAAxB,KAAAqE,EACgCrE,KAAKpB,MAApC8C,EADD2C,EACC3C,KAAMC,EADP0C,EACO1C,MAAOC,EADdyC,EACczC,MAAO6B,EADrBY,EACqBZ,OAE5B,OACEvD,EAAAC,EAAAC,cAACK,EAAD,KACG,SAAAJ,GAAS,IACAX,EAAaW,EAAbX,SACR,OACEQ,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,aACb3B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,eAAf,eACA3B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,aACb3B,EAAAC,EAAAC,cAAA,QAAMsD,SAAUlC,EAAKkC,SAASvB,KAAKX,EAAM9B,IACvCQ,EAAAC,EAAAC,cAACkE,EAAD,CACErB,MAAM,OACNvB,KAAK,OACLwB,YAAY,gBACZ7C,MAAOqB,EACPyB,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO/B,OAEhBxB,EAAAC,EAAAC,cAACkE,EAAD,CACErB,MAAM,QACNnE,KAAK,QACL4C,KAAK,QACLwB,YAAY,iBACZ7C,MAAOsB,EACPwB,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO9B,QAEhBzB,EAAAC,EAAAC,cAACkE,EAAD,CACErB,MAAM,QACNvB,KAAK,QACLwB,YAAY,iBACZ7C,MAAOuB,EACPuB,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO7B,QAEhB1B,EAAAC,EAAAC,cAAA,SACEtB,KAAK,SACLuB,MAAM,cACNwB,UAAU,wCA5GLrB,aCmIV+D,6MAlIb3F,MAAQ,CACN8C,KAAM,GACNC,MAAO,GACPC,MAAO,GACP6B,OAAQ,MAgBVC,+CAAW,SAAA3C,EAAOrB,EAAUmB,GAAjB,IAAA8C,EAAAjC,EAAAC,EAAAC,EAAA4C,EAAApF,EAAAW,EAAA,OAAAiB,EAAAb,EAAAc,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTP,EAAEgD,iBADOF,EAGsBhE,EAAKf,MAA5B8C,EAHCiC,EAGDjC,KAAMC,EAHLgC,EAGKhC,MAAOC,EAHZ+B,EAGY/B,MAGR,KAATF,EANK,CAAAR,EAAAE,KAAA,eAOPzB,EAAKC,SAAS,CACZ6D,OAAQ,CACN/B,KAAM,sBATHR,EAAA4C,OAAA,oBAeK,KAAVnC,EAfK,CAAAT,EAAAE,KAAA,eAgBPzB,EAAKC,SAAS,CACZ6D,OAAQ,CACN9B,MAAO,uBAlBJT,EAAA4C,OAAA,oBAwBK,KAAVlC,EAxBK,CAAAV,EAAAE,KAAA,gBAyBPzB,EAAKC,SAAS,CACZ6D,OAAQ,CACN7B,MAAO,uBA3BJV,EAAA4C,OAAA,yBAiCHU,EAAa,CACjB9C,OACAC,QACAC,SAEMxC,EAAOO,EAAKW,MAAMmE,MAAMC,OAAxBtF,GAtCC8B,EAAAE,KAAA,GAuCSvB,IAAM8E,IAAN,8CAAArF,OAC8BF,GAC9CoF,GAzCO,QAuCHzE,EAvCGmB,EAAA8C,KA2CTtE,EAAS,CAAEZ,KAAM,iBAAkBO,QAASU,EAAIE,OAGhDN,EAAKC,SAAS,CACZ8B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPwB,MAAO,KAGTzD,EAAKW,MAAM2D,QAAQC,KAAK,KArDf,yBAAAhD,EAAAK,SAAAR,gEAwDXoC,SAAW,SAAAtC,GAAC,OAAIlB,EAAKC,SAALb,OAAAoF,EAAA,EAAApF,CAAA,GAAiB8B,EAAEuD,OAAO1C,KAAOb,EAAEuD,OAAO/D,qNApEhDjB,EAAOY,KAAKM,MAAMmE,MAAMC,OAAxBtF,YACUS,IAAMC,IAAN,8CAAAR,OAC8BF,WAD1CW,SAGAZ,EAAUY,EAAIE,KACpBD,KAAKJ,SAAS,CACZ8B,KAAMvC,EAAQuC,KACdC,MAAOxC,EAAQwC,MACfC,MAAOzC,EAAQyC,2IA8DV,IAAAJ,EAAAxB,KAAAqE,EACgCrE,KAAKpB,MAApC8C,EADD2C,EACC3C,KAAMC,EADP0C,EACO1C,MAAOC,EADdyC,EACczC,MAAO6B,EADrBY,EACqBZ,OAE5B,OACEvD,EAAAC,EAAAC,cAACK,EAAD,KACG,SAAAJ,GAAS,IACAX,EAAaW,EAAbX,SACR,OACEQ,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,aACb3B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,eAAf,gBACA3B,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,aACb3B,EAAAC,EAAAC,cAAA,QAAMsD,SAAUlC,EAAKkC,SAASvB,KAAKX,EAAM9B,IACvCQ,EAAAC,EAAAC,cAACkE,EAAD,CACErB,MAAM,OACNvB,KAAK,OACLwB,YAAY,gBACZ7C,MAAOqB,EACPyB,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO/B,OAEhBxB,EAAAC,EAAAC,cAACkE,EAAD,CACErB,MAAM,QACNnE,KAAK,QACL4C,KAAK,QACLwB,YAAY,iBACZ7C,MAAOsB,EACPwB,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO9B,QAEhBzB,EAAAC,EAAAC,cAACkE,EAAD,CACErB,MAAM,QACNvB,KAAK,QACLwB,YAAY,iBACZ7C,MAAOuB,EACPuB,SAAU3B,EAAK2B,SACfC,MAAOK,EAAO7B,QAEhB1B,EAAAC,EAAAC,cAAA,SACEtB,KAAK,SACLuB,MAAM,iBACNwB,UAAU,wCAvHJrB,aCJXoE,EAAA,SAAAtE,GACb,OACEJ,EAAAC,EAAAC,cAAA,WAGEF,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,aAAd,yBACA3B,EAAAC,EAAAC,cAAA,KAAGyB,UAAU,QAAb,iCACA3B,EAAAC,EAAAC,cAAA,KAAGyB,UAAU,kBAAb,mBCPSgD,EAAA,WACb,OACE3E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIyB,UAAU,aAAd,sBACA3B,EAAAC,EAAAC,cAAA,KAAGyB,UAAU,QAAb,qCCkDSiD,6MArDblG,MAAQ,CACNmG,MAAO,GACPC,KAAM,uFAGY,IAAAxD,EAAAxB,KAClBiF,MAAM,gDACHC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAjF,GAAI,OACRuB,EAAK5B,SAAS,CACZmF,MAAO9E,EAAK8E,MACZC,KAAM/E,EAAK+E,0CA+BV,IAAArB,EACiB3D,KAAKpB,MAArBmG,EADDpB,EACCoB,MAAOC,EADRrB,EACQqB,KACf,OACE9E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAK2E,GACL7E,EAAAC,EAAAC,cAAA,SAAI4E,WAhDOxE,aCqCJ6E,gMAxBX,OACEnF,EAAAC,EAAAC,cAACkF,EAAD,KACEpF,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACElC,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,OACb3B,EAAAC,EAAAC,cAACmF,EAAD,CAAQ3C,SAAS,oBACjB1C,EAAAC,EAAAC,cAAA,OAAKyB,UAAU,aACb3B,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACEtF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpD,IACjCrC,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAWnC,IAC5CtD,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWpB,IAGjDrE,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWf,IACtC1E,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,UAAWb,IACrC5E,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CAAOG,UAAWd,gBAhBhBrE,cCDEoF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAStB,MACvB,2DCbNuB,IAASC,OAAO/F,EAAAC,EAAAC,cAAC8F,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,KAAK,SAAAsB,GACjCA,EAAaC","file":"static/js/main.05156039.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        )\n      };\n    default:\n      return state;\n  }\n};\n\nclass Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport default Provider;\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: true\n  };\n\n  onShowClick = e => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    } catch (e) {\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\n    }\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}\n                {showContactInfo ? (\n                  <i\n                    onClick={this.onShowClick}\n                    className=\"fas fa-sort-up\"\n                    style={{ cursor: \"pointer\" }}\n                  />\n                ) : (\n                  <i\n                    onClick={this.onShowClick}\n                    className=\"fas fa-sort-down\"\n                    style={{ cursor: \"pointer\" }}\n                  />\n                )}\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                />\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\"\n                    }}\n                  />\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">{email}</li>\n                  <li className=\"list-group-item\">{phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact </span> List\n              </h1>\n              {contacts.map(contact => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\" /> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\" /> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\" /> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\"\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextinputGroup\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (name === \"\") {\n      this.setState({\n        errors: {\n          name: \"Name is required\"\n        }\n      });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({\n        errors: {\n          email: \"Email is required\"\n        }\n      });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({\n        errors: {\n          phone: \"Phone is required\"\n        }\n      });\n      return;\n    }\n\n    const newContact = {\n      // id: uuid(),\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    //Clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      error: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport TextInputGroup from \"../layout/TextinputGroup\";\n// import uuid from \"uuid\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {}\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    //Check for errors\n    if (name === \"\") {\n      this.setState({\n        errors: {\n          name: \"Name is required\"\n        }\n      });\n      return;\n    }\n\n    if (email === \"\") {\n      this.setState({\n        errors: {\n          email: \"Email is required\"\n        }\n      });\n      return;\n    }\n\n    if (phone === \"\") {\n      this.setState({\n        errors: {\n          phone: \"Phone is required\"\n        }\n      });\n      return;\n    }\n\n    const updContact = {\n      name,\n      email,\n      phone\n    };\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updContact\n    );\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    //Clear state\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      error: {}\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter name...\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email...\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone...\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\n\nexport default props => {\n  return (\n    <div>\n      {/* how to get parameter from link */}\n      {/* <h1 className=\"display-4\">{props.match.params.id}</h1> */}\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contects</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\n\nclass Test extends Component {\n  state = {\n    title: \"\",\n    body: \"\"\n  };\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\n      .then(response => response.json())\n      .then(data =>\n        this.setState({\n          title: data.title,\n          body: data.body\n        })\n      );\n  }\n\n  //   componentWillMount() {\n  //     console.log(\"componentWillMount...\");\n  //   }\n\n  //   componentWillUpdate() {\n  //     console.log(\"componentWillUpdate...\");\n  //   }\n\n  //   componentDidUpdate() {\n  //     console.log(\"componentDidUpdate...\");\n  //   }\n\n  //   componentWillReceiveProps(nextProps, nextState) {\n  //     console.log(\"componentWillReceiveProps...\");\n  //   }\n\n  //   static getDerivedStateFromProps(nextProps, prevState) {\n  //     return {\n  //       test: \"something\"\n  //     };\n  //   }\n\n  //   getSnapshotBeforeUpdate(prevProps, prevState) {\n  //     console.log(\"getSnapshotBeforeUpdate...\");\n  //   }\n\n  render() {\n    const { title, body } = this.state;\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport Provider from \"./context\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport Test from \"./components/test/Test\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                {/* how to get parameter from link */}\n                {/* <Route exact path=\"/about/:id\" component={About} /> */}\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n"],"sourceRoot":""}